version: "3.7"
services:
  vote:
    hostname: vote
    image: bretfisher/examplevotingapp_vote
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.1"
          memory: 128M
      restart_policy:
        condition: on-failure
    ports:
      - '80:80'
    networks:
      - frontend
      - backend
  redis:
    hostname: redis
    image: redis:3.2
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 128M
      restart_policy:
        condition: on-failure
    networks:
      - frontend
      - backend 
  worker:
    hostname: worker
    image: bretfisher/examplevotingapp_worker:java  
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 128M
      restart_policy:
        condition: on-failure
    networks:
      - backend
  db:
    hostname: db
    image: postgres:9.4
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 128M
      restart_policy:
        condition: on-failure
#    secrets:
#      - psql_user
#      - psql_pass
#    environment:
#      POSTGRES_PASSWORD_FILE: /run/secrets/psql_pass
#      POSTGRES_USER_FILE: /run/secrets/psql_user
    volumes:
      - type: volume
        source: db-data
        target: /var/lib/postgresql/data
    networks:
      - backend
  result:
    hostname: result
    image: bretfisher/examplevotingapp_result
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 128M
      restart_policy:
        condition: on-failure
    ports:
      - '8080:80'
    networks: 
      - backend
networks:
  frontend:
    name: frontend
    driver: overlay
  backend:
    name: backend
    driver: overlay
volumes:
  db-data:

#secrets:
#  psql_user:
#    file: ./psql_user.txt
#  psql_pass:
#    file: ./psql_pass.txt
